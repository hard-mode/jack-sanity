#!/usr/bin/node
var sanity = require('../lib'),
	stdio = require('stdio'),
	fs = require('fs'),
	path = require('path');

var flags = stdio.getopt(sanity.flags),
	logger = sanity.createLogger(),
	app = sanity.createApplication(logger);

// Get the full path of the config file:
flags.config = fs.realpathSync(flags.config);

// Set the process title:
process.title = path.basename(__filename);

// Quieten the logger:
if (!!flags.quiet) {
	logger.verbose = false;
}

// Custom watches specified, skip our defaults:
if (!flags.watch) {
	// Restart when source code changes:
	app.watch(path.resolve(__dirname, '..', 'lib'));

	// Restart when the configuration file changes:
	app.watch(flags.config);
}

// Watch what was specified.
else if (flags.watch) {
	if (typeof flags.watch === 'string') {
		flags.watch = [flags.watch];
	}

	for (var index in flags.watch) {
		app.watch(fs.realpathSync(flags.watch[index]));
	}
}

// Cleanly exit:
process.on('SIGTERM', function() {
	app.close();
});
process.on('SIGINT', function() {
	console.log('');
	app.close();
});

// Begin execution:
app.open();